1 经典问题
	1.1 n个数有多少种入栈出栈顺序？
	1.2 n对括号有多少种匹配方式？
	1.3 1~n可以生成二叉搜索树的个数？
	1.4 矩阵链乘有多少种组合方式？
	1.5 n + 2个节点的划分成三角形的方法数？
	1.6 左上角走到右下角不跨过对角线的方法数？
2 卡特兰数公式
	h(n) = h(0)*h(n - 1) + h(1)*h(n - 2) + ... + h(n - 1)*h(0), h(0) == h(1) == 1;
	前几项：1， 1， 2， 5， 14， 42， 132， 429， 1430 ...
	通项公式: h(n) = C(2n, n) - C(2n, n - 1) = C(2n, n)/(n + 1)

	推导(反射法):
	设S为入栈，X为出栈，则SX组成序列方法数为 C(2n, n)，接下来再把不符合出栈顺序的序列排除即可
	如序列SXXS，不合法序列必有某个X出现后X个数大于S，如索引2的X，反射将此前所有S变为X，X变为S，即XSSS，得到n+1个S，n-1个X，这种序列个数为 C(2n, n - 1)
	故 h(n) = C(2n, n) - C(2n, n - 1) = C(2n, n)/(n+1)

